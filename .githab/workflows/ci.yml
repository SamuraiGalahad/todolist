name: Build & Test & Migrate

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build & Test & Migrate
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build --no-daemon

      - name: Run tests
        run: ./gradlew test --no-daemon

      - name: Liquibase migration
        run: ./gradlew update --no-daemon

      - name: Notify Telegram on Failure
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
            -d chat_id=${TELEGRAM_CHAT_ID} \
            -d text="‚ùå *GitHub CI FAILED* for project *${{ github.repository }}* on branch *${{ github.ref_name }}**Commit:* `${{ github.sha }}`*Message:* `${{ github.event.head_commit.message }}`*Workflow:* [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" \-d parse_mode=Markdown