stages:
  - build
  - test
  - migrate
  - notify

variables:
  SPRING_PROFILES_ACTIVE: ci
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  DB_HOST: $DB_HOST
  DB_PORT: $DB_PORT
  DB_NAME: $DB_NAME
  DB_USER: $DB_USER
  DB_PASSWORD: $DB_PASSWORD

default:
  image: gradle:8.5-jdk17
  before_script:
    - export PATH="$PATH:$HOME/.gradle"
    - echo "Using DB: $DB_NAME at $DB_HOST:$DB_PORT"

build:
  stage: build
  script:
    - ./gradlew clean build --no-daemon
  only:
    - master
  artifacts:
    paths:
      - build/libs
    expire_in: 1h

test:
  stage: test
  script:
    - ./gradlew test --no-daemon
  only:
    - master
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/TEST-*.xml
    paths:
      - build/reports/tests/test/index.html

liquibase_migrate:
  stage: migrate
  script:
    - ./gradlew update
  only:
    - master

notify_failure:
  stage: notify
  script: |
    curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
      -d chat_id=${TELEGRAM_CHAT_ID} \
      -d text="❌ *CI FAILED* for project *${CI_PROJECT_NAME}* on branch *${CI_COMMIT_REF_NAME}*.*Commit:* `${CI_COMMIT_SHORT_SHA}`*Message:* `${CI_COMMIT_MESSAGE}`*Pipeline:* [#${CI_PIPELINE_ID}](${CI_PIPELINE_URL})" \-d parse_mode=Markdown
  when: on_failure
  only:
    å- master
